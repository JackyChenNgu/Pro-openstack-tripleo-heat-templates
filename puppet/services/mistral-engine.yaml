heat_template_version: rocky

description: >
  Openstack Mistral Engine service configured with Puppet

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  MistralExecutionFieldSizeLimit:
    default: 1024
    description: The default maximum size in KB of large text fields of runtime
                 execution objects. Use -1 for no limit.
    type: number
  MistralEvaluationInterval:
    default: 120
    description: How often will the executions be evaluated
                 (in minutes). For example for value 120 the interval
                 will be 2 hours (every 2 hours).
    type: number
  MistralFinishedExecutionDuration:
    default: 2880
    description: Evaluate from which time remove executions in minutes.
                 For example when set to 60, remove all executions
                 that finished a 60 minutes ago or more.
                 Minimum value is 1.
                 Note that only final state execution will remove (SUCCESS/ERROR).
    constraints:
      - range: { min: 1 }
    type: number

resources:
  MistralBase:
    type: ./mistral-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Mistral Engine role.
    value:
      service_name: mistral_engine
      config_settings:
        map_merge:
          - get_attr: [MistralBase, role_data, config_settings]
          - mistral::engine::execution_field_size_limit_kb: {get_param: MistralExecutionFieldSizeLimit}
            mistral::engine::evaluation_interval: {get_param: MistralEvaluationInterval}
            mistral::engine::older_than: {get_param: MistralFinishedExecutionDuration}
      step_config: |
        include ::tripleo::profile::base::mistral::engine
      upgrade_tasks:
        - name: Check if mistral engine is deployed
          command: systemctl is-enabled openstack-mistral-engine
          tags: common
          ignore_errors: True
          register: mistral_engine_enabled
        - name: "PreUpgrade step0,validation: Check if openstack-mistral-engine is running"
          shell: >
            /usr/bin/systemctl show 'openstack-mistral-engine' --property ActiveState |
            grep '\bactive\b'
          when:
            - step|int == 0
            - mistral_engine_enabled.rc == 0
          tags: validation
        - name: Stop mistral_engine service
          when: step|int == 1
          service: name=openstack-mistral-engine state=stopped
        - name: Install openstack-mistral-engine package if it was disabled
          package: name=openstack-mistral-engine state=latest
          when:
            - step|int == 3
            - mistral_engine_enabled.rc != 0
