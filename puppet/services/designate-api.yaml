heat_template_version: rocky

description: >
  OpenStack Designate API service.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  DesignatePassword:
    description: The password for the Designate's database account.
    type: string
    hidden: true
  KeystoneRegion:
    type: string
    default: 'regionOne'
    description: Keystone region for endpoint
  MonitoringSubscriptionDesignateApi:
    default: 'overcloud-designate-api'
    type: string
  DesignateApiLoggingSource:
    type: json
    default:
      tag: openstack.designate.api
      path: /var/log/designate/api.log
  DesignateWorkers:
    default: 0
    description: Number of workers for Designate services.
    type: number
  NeutronPassword:
    description: The password for the neutron service and db account, used by neutron agents.
    type: string
    hidden: true

conditions:
  designate_workers_zero: {equals : [{get_param: DesignateWorkers}, 0]}

resources:

  DesignateBase:
    type: ./designate-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Designate API service.
    value:
      service_name: designate_api
      monitoring_subscription: {get_param: MonitoringSubscriptionDesignateApi}
      logging_source: {get_param: DesignateApiLoggingSource}
      logging_groups:
        - designate
      config_settings:
        map_merge:
          - get_attr: [DesignateBase, role_data, config_settings]
          - designate::keystone::authtoken::auth_uri: {get_param: [EndpointMap, KeystoneInternal, uri] }
            designate::keystone::authtoken::auth_url: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix]}
            designate::keystone::authtoken::project_name: 'service'
            designate::keystone::authtoken::password: {get_param: DesignatePassword}
            tripleo::profile::base::designate::api::listen_ip:
              str_replace:
                template:
                  "%{hiera('$NETWORK')}"
                params:
                  $NETWORK: {get_param: [ServiceNetMap, DesignateApiNetwork]}
            tripleo::profile::base::designate::api::listen_port: 9001
            tripleo.designate_api.firewall_rules:
              '139 designate api':
                dport:
                  - 9001
                  - 13001
          -
            if:
            - designate_workers_zero
            - {}
            - designate::api::workers: {get_param: DesignateWorkers}
      step_config: |
        include tripleo::profile::base::designate::api
      service_config_settings:
        keystone:
          designate::keystone::auth::tenant: 'service'
          designate::keystone::auth::public_url: {get_param: [EndpointMap, DesignatePublic, uri_no_suffix]}
          designate::keystone::auth::internal_url: { get_param: [ EndpointMap, DesignateInternal, uri_no_suffix ] }
          designate::keystone::auth::admin_url: { get_param: [ EndpointMap, DesignateAdmin, uri_no_suffix ] }
          designate::keystone::auth::password: {get_param: DesignatePassword}
          designate::keystone::auth::region: {get_param: KeystoneRegion}
        neutron_api:
          neutron::designate::password: {get_param: NeutronPassword}
          neutron::designate::url: {get_param: [EndpointMap, DesignateInternal, uri]}
          neutron::designate::auth_url: {get_param: [EndpointMap, KeystoneV3Admin, uri]}
          neutron::designate::project_name: 'service'
