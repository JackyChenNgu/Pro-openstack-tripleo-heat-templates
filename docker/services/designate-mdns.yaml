heat_template_version: rocky

description: >
  OpenStack containerized Designate MiniDNS service

parameters:
  DockerDesignateMDNSImage:
    description: image
    type: string
  DockerDesignateConfigImage:
    description: The container image to use for the designate config_volume
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json


resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MySQLClient:
    type: ../../puppet/services/database/mysql-client.yaml

  DesignateBase:
    type: ../../puppet/services/designate-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  DesignateMDNSBase:
    type: ../../puppet/services/designate-mdns.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Designate MDNS role.
    value:
      service_name: {get_attr: [DesignateMDNSBase, role_data, service_name]}
      config_settings:
        map_merge:
          - get_attr: [DesignateBase, role_data, config_settings]
          - get_attr: [DesignateMDNSBase, role_data, config_settings]
      logging_source: {get_attr: [DesignateMDNSBase, role_data, logging_source]}
      logging_groups: {get_attr: [DesignateMDNSBase, role_data, logging_groups]}
      service_config_settings: {get_attr: [DesignateMDNSBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: designate
        puppet_tags: designate_config
        step_config:
          list_join:
            - "\n"
            - - {get_attr: [DesignateBase, role_data, step_config]}
              - {get_attr: [DesignateMDNSBase, role_data, step_config]}
              - {get_attr: [MySQLClient, role_data, step_config]}
        config_image: {get_param: DockerDesignateConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/designate_mdns.json:
          command: /usr/bin/designate-mdns --config-file=/etc/designate/designate.conf --log-file=/var/log/designate/mdns.log
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/log/designate
              owner: designate:designate
              recurse: true
      docker_config:
        step_4:
          designate_mdns:
            image: &designate_mdns_image {get_param: DockerDesignateMDNSImage}
            net: host
            privileged: false
            restart: always
            healthcheck:
              test: /openstack/healthcheck
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /run:/run
                  - /var/lib/kolla/config_files/designate_mdns.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/designate/:/var/lib/kolla/config_files/src:ro
                  - /var/log/containers/designate:/var/log/designate
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent directories
          file:
            path: "{{ item.path }}"
            state: directory
            setype: "{{ item.setype }}"
          with_items:
            - { 'path': /var/log/designate, 'setype': svirt_sandbox_file_t }
            - { 'path': /var/log/containers/designate, 'setype': svirt_sandbox_file_t }
        - name: designate logs readme
          copy:
            dest: /var/log/designate/readme.txt
            content: |
              Log files from designate containers can be found under
              /var/log/containers/designate.
          ignore_errors: true
