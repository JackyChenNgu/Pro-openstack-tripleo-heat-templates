heat_template_version: rocky

description: >
  Ceph NFS Ganeshaservice.

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ManilaCephFSCephFSAuthId:
    type: string
    default: 'manila'

resources:
  CephBase:
    type: ./ceph-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  CephNfsAnsibleVars:
    type: OS::Heat::Value
    properties:
      type: json
      value:
        vars:
          ceph_nfs_bind_addr: {get_param: [EndpointMap, GaneshaInternal, host]}
          ceph_nfs_enable_service: false
          ceph_nfs_use_pacemaker: true
          ceph_nfs_dynamic_exports: true
          ceph_nfs_service_suffix: pacemaker
          nfs_obj_gw: false
          ceph_nfs_rados_backend: true
          ceph_nfs_disable_caching: true
          ceph_nfs_ceph_user: {get_param: ManilaCephFSCephFSAuthId}

outputs:
  role_data:
    description: Role data for the Ceph NFS Ganesha service.
    value:
      service_name: ceph_nfs
      upgrade_tasks: []
      step_config: 'include ::tripleo::profile::pacemaker::ceph_nfs'
      puppet_config:
        config_image: ''
        config_volume: ''
        step_config: ''
      # step_config seems to be ignored if docker_config is present
      #docker_config: {}
      external_deploy_tasks:
        list_concat:
        - {get_attr: [CephBase, role_data, external_deploy_tasks]}
        - - name: ceph_nfs_external_deploy_init
            when: step == '1'
            tags: ceph
            block:
              - name: set ceph-ansible group vars nfss
                set_fact:
                  ceph_ansible_group_vars_nfss: {get_attr: [CephNfsAnsibleVars, value, vars]}
              - name: generate ceph-ansible group vars nfss
                copy:
                  dest: "{{playbook_dir}}/ceph-ansible/group_vars/nfss.yml"
                  content: "{{ceph_ansible_group_vars_nfss|to_nice_yaml}}"
      external_update_tasks: {get_attr: [CephBase, role_data, external_update_tasks]}
      external_upgrade_tasks: {get_attr: [CephBase, role_data, external_upgrade_tasks]}
      config_settings:
        map_merge:
        - tripleo.ceph_nfs.firewall_rules:
            '120 ceph_nfs':
              dport:
              # We support only NFS 4.1 to start
              - 2049
        - {}